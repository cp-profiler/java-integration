// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: message.proto

package com.github.cpprofiler;

public final class Message {
  private Message() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
  }
  public interface NodeOrBuilder extends
      // @@protoc_insertion_point(interface_extends:message.Node)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>required .message.Node.MsgType type = 1;</code>
     */
    boolean hasType();
    /**
     * <code>required .message.Node.MsgType type = 1;</code>
     */
    com.github.cpprofiler.Message.Node.MsgType getType();

    /**
     * <code>optional int32 sid = 2;</code>
     */
    boolean hasSid();
    /**
     * <code>optional int32 sid = 2;</code>
     */
    int getSid();

    /**
     * <code>optional int32 pid = 3;</code>
     */
    boolean hasPid();
    /**
     * <code>optional int32 pid = 3;</code>
     */
    int getPid();

    /**
     * <code>optional int32 alt = 4;</code>
     */
    boolean hasAlt();
    /**
     * <code>optional int32 alt = 4;</code>
     */
    int getAlt();

    /**
     * <code>optional int32 kids = 5;</code>
     */
    boolean hasKids();
    /**
     * <code>optional int32 kids = 5;</code>
     */
    int getKids();

    /**
     * <code>optional .message.Node.NodeStatus status = 6;</code>
     */
    boolean hasStatus();
    /**
     * <code>optional .message.Node.NodeStatus status = 6;</code>
     */
    com.github.cpprofiler.Message.Node.NodeStatus getStatus();

    /**
     * <code>optional int32 restart_id = 7;</code>
     */
    boolean hasRestartId();
    /**
     * <code>optional int32 restart_id = 7;</code>
     */
    int getRestartId();

    /**
     * <code>optional uint64 time = 8;</code>
     */
    boolean hasTime();
    /**
     * <code>optional uint64 time = 8;</code>
     */
    long getTime();

    /**
     * <code>optional int32 thread_id = 9;</code>
     */
    boolean hasThreadId();
    /**
     * <code>optional int32 thread_id = 9;</code>
     */
    int getThreadId();

    /**
     * <code>optional string label = 10;</code>
     */
    boolean hasLabel();
    /**
     * <code>optional string label = 10;</code>
     */
    java.lang.String getLabel();
    /**
     * <code>optional string label = 10;</code>
     */
    com.google.protobuf.ByteString
        getLabelBytes();

    /**
     * <code>optional float domain_size = 11;</code>
     */
    boolean hasDomainSize();
    /**
     * <code>optional float domain_size = 11;</code>
     */
    float getDomainSize();

    /**
     * <code>optional string solution = 12;</code>
     */
    boolean hasSolution();
    /**
     * <code>optional string solution = 12;</code>
     */
    java.lang.String getSolution();
    /**
     * <code>optional string solution = 12;</code>
     */
    com.google.protobuf.ByteString
        getSolutionBytes();

    /**
     * <code>optional string nogood = 13;</code>
     */
    boolean hasNogood();
    /**
     * <code>optional string nogood = 13;</code>
     */
    java.lang.String getNogood();
    /**
     * <code>optional string nogood = 13;</code>
     */
    com.google.protobuf.ByteString
        getNogoodBytes();

    /**
     * <code>optional string info = 14;</code>
     */
    boolean hasInfo();
    /**
     * <code>optional string info = 14;</code>
     */
    java.lang.String getInfo();
    /**
     * <code>optional string info = 14;</code>
     */
    com.google.protobuf.ByteString
        getInfoBytes();

    /**
     * <code>optional int32 nogood_bld = 15;</code>
     */
    boolean hasNogoodBld();
    /**
     * <code>optional int32 nogood_bld = 15;</code>
     */
    int getNogoodBld();

    /**
     * <code>optional bool uses_assumptions = 16;</code>
     */
    boolean hasUsesAssumptions();
    /**
     * <code>optional bool uses_assumptions = 16;</code>
     */
    boolean getUsesAssumptions();

    /**
     * <code>optional int32 backjump_distance = 17;</code>
     */
    boolean hasBackjumpDistance();
    /**
     * <code>optional int32 backjump_distance = 17;</code>
     */
    int getBackjumpDistance();

    /**
     * <code>optional int32 decision_level = 18;</code>
     */
    boolean hasDecisionLevel();
    /**
     * <code>optional int32 decision_level = 18;</code>
     */
    int getDecisionLevel();
  }
  /**
   * Protobuf type {@code message.Node}
   */
  public static final class Node extends
      com.google.protobuf.GeneratedMessage implements
      // @@protoc_insertion_point(message_implements:message.Node)
      NodeOrBuilder {
    // Use Node.newBuilder() to construct.
    private Node(com.google.protobuf.GeneratedMessage.Builder<?> builder) {
      super(builder);
      this.unknownFields = builder.getUnknownFields();
    }
    private Node(boolean noInit) { this.unknownFields = com.google.protobuf.UnknownFieldSet.getDefaultInstance(); }

    private static final Node defaultInstance;
    public static Node getDefaultInstance() {
      return defaultInstance;
    }

    public Node getDefaultInstanceForType() {
      return defaultInstance;
    }

    private final com.google.protobuf.UnknownFieldSet unknownFields;
    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
      return this.unknownFields;
    }
    private Node(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      initFields();
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            default: {
              if (!parseUnknownField(input, unknownFields,
                                     extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
            case 8: {
              int rawValue = input.readEnum();
              com.github.cpprofiler.Message.Node.MsgType value = com.github.cpprofiler.Message.Node.MsgType.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(1, rawValue);
              } else {
                bitField0_ |= 0x00000001;
                type_ = value;
              }
              break;
            }
            case 16: {
              bitField0_ |= 0x00000002;
              sid_ = input.readInt32();
              break;
            }
            case 24: {
              bitField0_ |= 0x00000004;
              pid_ = input.readInt32();
              break;
            }
            case 32: {
              bitField0_ |= 0x00000008;
              alt_ = input.readInt32();
              break;
            }
            case 40: {
              bitField0_ |= 0x00000010;
              kids_ = input.readInt32();
              break;
            }
            case 48: {
              int rawValue = input.readEnum();
              com.github.cpprofiler.Message.Node.NodeStatus value = com.github.cpprofiler.Message.Node.NodeStatus.valueOf(rawValue);
              if (value == null) {
                unknownFields.mergeVarintField(6, rawValue);
              } else {
                bitField0_ |= 0x00000020;
                status_ = value;
              }
              break;
            }
            case 56: {
              bitField0_ |= 0x00000040;
              restartId_ = input.readInt32();
              break;
            }
            case 64: {
              bitField0_ |= 0x00000080;
              time_ = input.readUInt64();
              break;
            }
            case 72: {
              bitField0_ |= 0x00000100;
              threadId_ = input.readInt32();
              break;
            }
            case 82: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000200;
              label_ = bs;
              break;
            }
            case 93: {
              bitField0_ |= 0x00000400;
              domainSize_ = input.readFloat();
              break;
            }
            case 98: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00000800;
              solution_ = bs;
              break;
            }
            case 106: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00001000;
              nogood_ = bs;
              break;
            }
            case 114: {
              com.google.protobuf.ByteString bs = input.readBytes();
              bitField0_ |= 0x00002000;
              info_ = bs;
              break;
            }
            case 120: {
              bitField0_ |= 0x00004000;
              nogoodBld_ = input.readInt32();
              break;
            }
            case 128: {
              bitField0_ |= 0x00008000;
              usesAssumptions_ = input.readBool();
              break;
            }
            case 136: {
              bitField0_ |= 0x00010000;
              backjumpDistance_ = input.readInt32();
              break;
            }
            case 144: {
              bitField0_ |= 0x00020000;
              decisionLevel_ = input.readInt32();
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e.getMessage()).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.github.cpprofiler.Message.internal_static_message_Node_descriptor;
    }

    protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.github.cpprofiler.Message.internal_static_message_Node_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.github.cpprofiler.Message.Node.class, com.github.cpprofiler.Message.Node.Builder.class);
    }

    public static com.google.protobuf.Parser<Node> PARSER =
        new com.google.protobuf.AbstractParser<Node>() {
      public Node parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new Node(input, extensionRegistry);
      }
    };

    @java.lang.Override
    public com.google.protobuf.Parser<Node> getParserForType() {
      return PARSER;
    }

    /**
     * Protobuf enum {@code message.Node.MsgType}
     */
    public enum MsgType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>NODE = 0;</code>
       */
      NODE(0, 0),
      /**
       * <code>DONE = 1;</code>
       */
      DONE(1, 1),
      /**
       * <code>START = 2;</code>
       */
      START(2, 2),
      ;

      /**
       * <code>NODE = 0;</code>
       */
      public static final int NODE_VALUE = 0;
      /**
       * <code>DONE = 1;</code>
       */
      public static final int DONE_VALUE = 1;
      /**
       * <code>START = 2;</code>
       */
      public static final int START_VALUE = 2;


      public final int getNumber() { return value; }

      public static MsgType valueOf(int value) {
        switch (value) {
          case 0: return NODE;
          case 1: return DONE;
          case 2: return START;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MsgType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<MsgType>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MsgType>() {
              public MsgType findValueByNumber(int number) {
                return MsgType.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.github.cpprofiler.Message.Node.getDescriptor().getEnumTypes().get(0);
      }

      private static final MsgType[] VALUES = values();

      public static MsgType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private MsgType(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:message.Node.MsgType)
    }

    /**
     * Protobuf enum {@code message.Node.NodeStatus}
     */
    public enum NodeStatus
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>SOLVED = 0;</code>
       *
       * <pre>
       *&#47;&lt; Node representing a solution
       * </pre>
       */
      SOLVED(0, 0),
      /**
       * <code>FAILED = 1;</code>
       *
       * <pre>
       *&#47;&lt; Node representing failure
       * </pre>
       */
      FAILED(1, 1),
      /**
       * <code>BRANCH = 2;</code>
       *
       * <pre>
       *&#47;&lt; Node representing a branch
       * </pre>
       */
      BRANCH(2, 2),
      /**
       * <code>UNDETERMINED = 3;</code>
       *
       * <pre>
       *&#47;&lt; Node that has not been explored yet
       * </pre>
       */
      UNDETERMINED(3, 3),
      /**
       * <code>STOP = 4;</code>
       *
       * <pre>
       *&#47;&lt; Node representing stop point
       * </pre>
       */
      STOP(4, 4),
      /**
       * <code>UNSTOP = 5;</code>
       *
       * <pre>
       *&#47;&lt; Node representing ignored stop point
       * </pre>
       */
      UNSTOP(5, 5),
      /**
       * <code>SKIPPED = 6;</code>
       *
       * <pre>
       *&#47;&lt; Skipped by backjumping
       * </pre>
       */
      SKIPPED(6, 6),
      /**
       * <code>MERGING = 7;</code>
       */
      MERGING(7, 7),
      ;

      /**
       * <code>SOLVED = 0;</code>
       *
       * <pre>
       *&#47;&lt; Node representing a solution
       * </pre>
       */
      public static final int SOLVED_VALUE = 0;
      /**
       * <code>FAILED = 1;</code>
       *
       * <pre>
       *&#47;&lt; Node representing failure
       * </pre>
       */
      public static final int FAILED_VALUE = 1;
      /**
       * <code>BRANCH = 2;</code>
       *
       * <pre>
       *&#47;&lt; Node representing a branch
       * </pre>
       */
      public static final int BRANCH_VALUE = 2;
      /**
       * <code>UNDETERMINED = 3;</code>
       *
       * <pre>
       *&#47;&lt; Node that has not been explored yet
       * </pre>
       */
      public static final int UNDETERMINED_VALUE = 3;
      /**
       * <code>STOP = 4;</code>
       *
       * <pre>
       *&#47;&lt; Node representing stop point
       * </pre>
       */
      public static final int STOP_VALUE = 4;
      /**
       * <code>UNSTOP = 5;</code>
       *
       * <pre>
       *&#47;&lt; Node representing ignored stop point
       * </pre>
       */
      public static final int UNSTOP_VALUE = 5;
      /**
       * <code>SKIPPED = 6;</code>
       *
       * <pre>
       *&#47;&lt; Skipped by backjumping
       * </pre>
       */
      public static final int SKIPPED_VALUE = 6;
      /**
       * <code>MERGING = 7;</code>
       */
      public static final int MERGING_VALUE = 7;


      public final int getNumber() { return value; }

      public static NodeStatus valueOf(int value) {
        switch (value) {
          case 0: return SOLVED;
          case 1: return FAILED;
          case 2: return BRANCH;
          case 3: return UNDETERMINED;
          case 4: return STOP;
          case 5: return UNSTOP;
          case 6: return SKIPPED;
          case 7: return MERGING;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<NodeStatus>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static com.google.protobuf.Internal.EnumLiteMap<NodeStatus>
          internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<NodeStatus>() {
              public NodeStatus findValueByNumber(int number) {
                return NodeStatus.valueOf(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        return getDescriptor().getValues().get(index);
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return com.github.cpprofiler.Message.Node.getDescriptor().getEnumTypes().get(1);
      }

      private static final NodeStatus[] VALUES = values();

      public static NodeStatus valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        return VALUES[desc.getIndex()];
      }

      private final int index;
      private final int value;

      private NodeStatus(int index, int value) {
        this.index = index;
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:message.Node.NodeStatus)
    }

    private int bitField0_;
    public static final int TYPE_FIELD_NUMBER = 1;
    private com.github.cpprofiler.Message.Node.MsgType type_;
    /**
     * <code>required .message.Node.MsgType type = 1;</code>
     */
    public boolean hasType() {
      return ((bitField0_ & 0x00000001) == 0x00000001);
    }
    /**
     * <code>required .message.Node.MsgType type = 1;</code>
     */
    public com.github.cpprofiler.Message.Node.MsgType getType() {
      return type_;
    }

    public static final int SID_FIELD_NUMBER = 2;
    private int sid_;
    /**
     * <code>optional int32 sid = 2;</code>
     */
    public boolean hasSid() {
      return ((bitField0_ & 0x00000002) == 0x00000002);
    }
    /**
     * <code>optional int32 sid = 2;</code>
     */
    public int getSid() {
      return sid_;
    }

    public static final int PID_FIELD_NUMBER = 3;
    private int pid_;
    /**
     * <code>optional int32 pid = 3;</code>
     */
    public boolean hasPid() {
      return ((bitField0_ & 0x00000004) == 0x00000004);
    }
    /**
     * <code>optional int32 pid = 3;</code>
     */
    public int getPid() {
      return pid_;
    }

    public static final int ALT_FIELD_NUMBER = 4;
    private int alt_;
    /**
     * <code>optional int32 alt = 4;</code>
     */
    public boolean hasAlt() {
      return ((bitField0_ & 0x00000008) == 0x00000008);
    }
    /**
     * <code>optional int32 alt = 4;</code>
     */
    public int getAlt() {
      return alt_;
    }

    public static final int KIDS_FIELD_NUMBER = 5;
    private int kids_;
    /**
     * <code>optional int32 kids = 5;</code>
     */
    public boolean hasKids() {
      return ((bitField0_ & 0x00000010) == 0x00000010);
    }
    /**
     * <code>optional int32 kids = 5;</code>
     */
    public int getKids() {
      return kids_;
    }

    public static final int STATUS_FIELD_NUMBER = 6;
    private com.github.cpprofiler.Message.Node.NodeStatus status_;
    /**
     * <code>optional .message.Node.NodeStatus status = 6;</code>
     */
    public boolean hasStatus() {
      return ((bitField0_ & 0x00000020) == 0x00000020);
    }
    /**
     * <code>optional .message.Node.NodeStatus status = 6;</code>
     */
    public com.github.cpprofiler.Message.Node.NodeStatus getStatus() {
      return status_;
    }

    public static final int RESTART_ID_FIELD_NUMBER = 7;
    private int restartId_;
    /**
     * <code>optional int32 restart_id = 7;</code>
     */
    public boolean hasRestartId() {
      return ((bitField0_ & 0x00000040) == 0x00000040);
    }
    /**
     * <code>optional int32 restart_id = 7;</code>
     */
    public int getRestartId() {
      return restartId_;
    }

    public static final int TIME_FIELD_NUMBER = 8;
    private long time_;
    /**
     * <code>optional uint64 time = 8;</code>
     */
    public boolean hasTime() {
      return ((bitField0_ & 0x00000080) == 0x00000080);
    }
    /**
     * <code>optional uint64 time = 8;</code>
     */
    public long getTime() {
      return time_;
    }

    public static final int THREAD_ID_FIELD_NUMBER = 9;
    private int threadId_;
    /**
     * <code>optional int32 thread_id = 9;</code>
     */
    public boolean hasThreadId() {
      return ((bitField0_ & 0x00000100) == 0x00000100);
    }
    /**
     * <code>optional int32 thread_id = 9;</code>
     */
    public int getThreadId() {
      return threadId_;
    }

    public static final int LABEL_FIELD_NUMBER = 10;
    private java.lang.Object label_;
    /**
     * <code>optional string label = 10;</code>
     */
    public boolean hasLabel() {
      return ((bitField0_ & 0x00000200) == 0x00000200);
    }
    /**
     * <code>optional string label = 10;</code>
     */
    public java.lang.String getLabel() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          label_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string label = 10;</code>
     */
    public com.google.protobuf.ByteString
        getLabelBytes() {
      java.lang.Object ref = label_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        label_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int DOMAIN_SIZE_FIELD_NUMBER = 11;
    private float domainSize_;
    /**
     * <code>optional float domain_size = 11;</code>
     */
    public boolean hasDomainSize() {
      return ((bitField0_ & 0x00000400) == 0x00000400);
    }
    /**
     * <code>optional float domain_size = 11;</code>
     */
    public float getDomainSize() {
      return domainSize_;
    }

    public static final int SOLUTION_FIELD_NUMBER = 12;
    private java.lang.Object solution_;
    /**
     * <code>optional string solution = 12;</code>
     */
    public boolean hasSolution() {
      return ((bitField0_ & 0x00000800) == 0x00000800);
    }
    /**
     * <code>optional string solution = 12;</code>
     */
    public java.lang.String getSolution() {
      java.lang.Object ref = solution_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          solution_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string solution = 12;</code>
     */
    public com.google.protobuf.ByteString
        getSolutionBytes() {
      java.lang.Object ref = solution_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        solution_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NOGOOD_FIELD_NUMBER = 13;
    private java.lang.Object nogood_;
    /**
     * <code>optional string nogood = 13;</code>
     */
    public boolean hasNogood() {
      return ((bitField0_ & 0x00001000) == 0x00001000);
    }
    /**
     * <code>optional string nogood = 13;</code>
     */
    public java.lang.String getNogood() {
      java.lang.Object ref = nogood_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          nogood_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string nogood = 13;</code>
     */
    public com.google.protobuf.ByteString
        getNogoodBytes() {
      java.lang.Object ref = nogood_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        nogood_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int INFO_FIELD_NUMBER = 14;
    private java.lang.Object info_;
    /**
     * <code>optional string info = 14;</code>
     */
    public boolean hasInfo() {
      return ((bitField0_ & 0x00002000) == 0x00002000);
    }
    /**
     * <code>optional string info = 14;</code>
     */
    public java.lang.String getInfo() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        return (java.lang.String) ref;
      } else {
        com.google.protobuf.ByteString bs = 
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        if (bs.isValidUtf8()) {
          info_ = s;
        }
        return s;
      }
    }
    /**
     * <code>optional string info = 14;</code>
     */
    public com.google.protobuf.ByteString
        getInfoBytes() {
      java.lang.Object ref = info_;
      if (ref instanceof java.lang.String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        info_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }

    public static final int NOGOOD_BLD_FIELD_NUMBER = 15;
    private int nogoodBld_;
    /**
     * <code>optional int32 nogood_bld = 15;</code>
     */
    public boolean hasNogoodBld() {
      return ((bitField0_ & 0x00004000) == 0x00004000);
    }
    /**
     * <code>optional int32 nogood_bld = 15;</code>
     */
    public int getNogoodBld() {
      return nogoodBld_;
    }

    public static final int USES_ASSUMPTIONS_FIELD_NUMBER = 16;
    private boolean usesAssumptions_;
    /**
     * <code>optional bool uses_assumptions = 16;</code>
     */
    public boolean hasUsesAssumptions() {
      return ((bitField0_ & 0x00008000) == 0x00008000);
    }
    /**
     * <code>optional bool uses_assumptions = 16;</code>
     */
    public boolean getUsesAssumptions() {
      return usesAssumptions_;
    }

    public static final int BACKJUMP_DISTANCE_FIELD_NUMBER = 17;
    private int backjumpDistance_;
    /**
     * <code>optional int32 backjump_distance = 17;</code>
     */
    public boolean hasBackjumpDistance() {
      return ((bitField0_ & 0x00010000) == 0x00010000);
    }
    /**
     * <code>optional int32 backjump_distance = 17;</code>
     */
    public int getBackjumpDistance() {
      return backjumpDistance_;
    }

    public static final int DECISION_LEVEL_FIELD_NUMBER = 18;
    private int decisionLevel_;
    /**
     * <code>optional int32 decision_level = 18;</code>
     */
    public boolean hasDecisionLevel() {
      return ((bitField0_ & 0x00020000) == 0x00020000);
    }
    /**
     * <code>optional int32 decision_level = 18;</code>
     */
    public int getDecisionLevel() {
      return decisionLevel_;
    }

    private void initFields() {
      type_ = com.github.cpprofiler.Message.Node.MsgType.NODE;
      sid_ = 0;
      pid_ = 0;
      alt_ = 0;
      kids_ = 0;
      status_ = com.github.cpprofiler.Message.Node.NodeStatus.SOLVED;
      restartId_ = 0;
      time_ = 0L;
      threadId_ = 0;
      label_ = "";
      domainSize_ = 0F;
      solution_ = "";
      nogood_ = "";
      info_ = "";
      nogoodBld_ = 0;
      usesAssumptions_ = false;
      backjumpDistance_ = 0;
      decisionLevel_ = 0;
    }
    private byte memoizedIsInitialized = -1;
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      if (!hasType()) {
        memoizedIsInitialized = 0;
        return false;
      }
      memoizedIsInitialized = 1;
      return true;
    }

    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        output.writeEnum(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        output.writeInt32(2, sid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        output.writeInt32(3, pid_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        output.writeInt32(4, alt_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        output.writeInt32(5, kids_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        output.writeEnum(6, status_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        output.writeInt32(7, restartId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        output.writeUInt64(8, time_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        output.writeInt32(9, threadId_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        output.writeBytes(10, getLabelBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        output.writeFloat(11, domainSize_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        output.writeBytes(12, getSolutionBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        output.writeBytes(13, getNogoodBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        output.writeBytes(14, getInfoBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        output.writeInt32(15, nogoodBld_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        output.writeBool(16, usesAssumptions_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        output.writeInt32(17, backjumpDistance_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        output.writeInt32(18, decisionLevel_);
      }
      getUnknownFields().writeTo(output);
    }

    private int memoizedSerializedSize = -1;
    public int getSerializedSize() {
      int size = memoizedSerializedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(1, type_.getNumber());
      }
      if (((bitField0_ & 0x00000002) == 0x00000002)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(2, sid_);
      }
      if (((bitField0_ & 0x00000004) == 0x00000004)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(3, pid_);
      }
      if (((bitField0_ & 0x00000008) == 0x00000008)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(4, alt_);
      }
      if (((bitField0_ & 0x00000010) == 0x00000010)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(5, kids_);
      }
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(6, status_.getNumber());
      }
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(7, restartId_);
      }
      if (((bitField0_ & 0x00000080) == 0x00000080)) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(8, time_);
      }
      if (((bitField0_ & 0x00000100) == 0x00000100)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(9, threadId_);
      }
      if (((bitField0_ & 0x00000200) == 0x00000200)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(10, getLabelBytes());
      }
      if (((bitField0_ & 0x00000400) == 0x00000400)) {
        size += com.google.protobuf.CodedOutputStream
          .computeFloatSize(11, domainSize_);
      }
      if (((bitField0_ & 0x00000800) == 0x00000800)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(12, getSolutionBytes());
      }
      if (((bitField0_ & 0x00001000) == 0x00001000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(13, getNogoodBytes());
      }
      if (((bitField0_ & 0x00002000) == 0x00002000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBytesSize(14, getInfoBytes());
      }
      if (((bitField0_ & 0x00004000) == 0x00004000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(15, nogoodBld_);
      }
      if (((bitField0_ & 0x00008000) == 0x00008000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeBoolSize(16, usesAssumptions_);
      }
      if (((bitField0_ & 0x00010000) == 0x00010000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(17, backjumpDistance_);
      }
      if (((bitField0_ & 0x00020000) == 0x00020000)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt32Size(18, decisionLevel_);
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSerializedSize = size;
      return size;
    }

    private static final long serialVersionUID = 0L;
    @java.lang.Override
    protected java.lang.Object writeReplace()
        throws java.io.ObjectStreamException {
      return super.writeReplace();
    }

    public static com.github.cpprofiler.Message.Node parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.cpprofiler.Message.Node parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.cpprofiler.Message.Node parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static com.github.cpprofiler.Message.Node parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static com.github.cpprofiler.Message.Node parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.github.cpprofiler.Message.Node parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }
    public static com.github.cpprofiler.Message.Node parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input);
    }
    public static com.github.cpprofiler.Message.Node parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseDelimitedFrom(input, extensionRegistry);
    }
    public static com.github.cpprofiler.Message.Node parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return PARSER.parseFrom(input);
    }
    public static com.github.cpprofiler.Message.Node parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return PARSER.parseFrom(input, extensionRegistry);
    }

    public static Builder newBuilder() { return Builder.create(); }
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder(com.github.cpprofiler.Message.Node prototype) {
      return newBuilder().mergeFrom(prototype);
    }
    public Builder toBuilder() { return newBuilder(this); }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessage.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code message.Node}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessage.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:message.Node)
        com.github.cpprofiler.Message.NodeOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return com.github.cpprofiler.Message.internal_static_message_Node_descriptor;
      }

      protected com.google.protobuf.GeneratedMessage.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return com.github.cpprofiler.Message.internal_static_message_Node_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                com.github.cpprofiler.Message.Node.class, com.github.cpprofiler.Message.Node.Builder.class);
      }

      // Construct using com.github.cpprofiler.Message.Node.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessage.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessage.alwaysUseFieldBuilders) {
        }
      }
      private static Builder create() {
        return new Builder();
      }

      public Builder clear() {
        super.clear();
        type_ = com.github.cpprofiler.Message.Node.MsgType.NODE;
        bitField0_ = (bitField0_ & ~0x00000001);
        sid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000002);
        pid_ = 0;
        bitField0_ = (bitField0_ & ~0x00000004);
        alt_ = 0;
        bitField0_ = (bitField0_ & ~0x00000008);
        kids_ = 0;
        bitField0_ = (bitField0_ & ~0x00000010);
        status_ = com.github.cpprofiler.Message.Node.NodeStatus.SOLVED;
        bitField0_ = (bitField0_ & ~0x00000020);
        restartId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000040);
        time_ = 0L;
        bitField0_ = (bitField0_ & ~0x00000080);
        threadId_ = 0;
        bitField0_ = (bitField0_ & ~0x00000100);
        label_ = "";
        bitField0_ = (bitField0_ & ~0x00000200);
        domainSize_ = 0F;
        bitField0_ = (bitField0_ & ~0x00000400);
        solution_ = "";
        bitField0_ = (bitField0_ & ~0x00000800);
        nogood_ = "";
        bitField0_ = (bitField0_ & ~0x00001000);
        info_ = "";
        bitField0_ = (bitField0_ & ~0x00002000);
        nogoodBld_ = 0;
        bitField0_ = (bitField0_ & ~0x00004000);
        usesAssumptions_ = false;
        bitField0_ = (bitField0_ & ~0x00008000);
        backjumpDistance_ = 0;
        bitField0_ = (bitField0_ & ~0x00010000);
        decisionLevel_ = 0;
        bitField0_ = (bitField0_ & ~0x00020000);
        return this;
      }

      public Builder clone() {
        return create().mergeFrom(buildPartial());
      }

      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return com.github.cpprofiler.Message.internal_static_message_Node_descriptor;
      }

      public com.github.cpprofiler.Message.Node getDefaultInstanceForType() {
        return com.github.cpprofiler.Message.Node.getDefaultInstance();
      }

      public com.github.cpprofiler.Message.Node build() {
        com.github.cpprofiler.Message.Node result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      public com.github.cpprofiler.Message.Node buildPartial() {
        com.github.cpprofiler.Message.Node result = new com.github.cpprofiler.Message.Node(this);
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) == 0x00000001)) {
          to_bitField0_ |= 0x00000001;
        }
        result.type_ = type_;
        if (((from_bitField0_ & 0x00000002) == 0x00000002)) {
          to_bitField0_ |= 0x00000002;
        }
        result.sid_ = sid_;
        if (((from_bitField0_ & 0x00000004) == 0x00000004)) {
          to_bitField0_ |= 0x00000004;
        }
        result.pid_ = pid_;
        if (((from_bitField0_ & 0x00000008) == 0x00000008)) {
          to_bitField0_ |= 0x00000008;
        }
        result.alt_ = alt_;
        if (((from_bitField0_ & 0x00000010) == 0x00000010)) {
          to_bitField0_ |= 0x00000010;
        }
        result.kids_ = kids_;
        if (((from_bitField0_ & 0x00000020) == 0x00000020)) {
          to_bitField0_ |= 0x00000020;
        }
        result.status_ = status_;
        if (((from_bitField0_ & 0x00000040) == 0x00000040)) {
          to_bitField0_ |= 0x00000040;
        }
        result.restartId_ = restartId_;
        if (((from_bitField0_ & 0x00000080) == 0x00000080)) {
          to_bitField0_ |= 0x00000080;
        }
        result.time_ = time_;
        if (((from_bitField0_ & 0x00000100) == 0x00000100)) {
          to_bitField0_ |= 0x00000100;
        }
        result.threadId_ = threadId_;
        if (((from_bitField0_ & 0x00000200) == 0x00000200)) {
          to_bitField0_ |= 0x00000200;
        }
        result.label_ = label_;
        if (((from_bitField0_ & 0x00000400) == 0x00000400)) {
          to_bitField0_ |= 0x00000400;
        }
        result.domainSize_ = domainSize_;
        if (((from_bitField0_ & 0x00000800) == 0x00000800)) {
          to_bitField0_ |= 0x00000800;
        }
        result.solution_ = solution_;
        if (((from_bitField0_ & 0x00001000) == 0x00001000)) {
          to_bitField0_ |= 0x00001000;
        }
        result.nogood_ = nogood_;
        if (((from_bitField0_ & 0x00002000) == 0x00002000)) {
          to_bitField0_ |= 0x00002000;
        }
        result.info_ = info_;
        if (((from_bitField0_ & 0x00004000) == 0x00004000)) {
          to_bitField0_ |= 0x00004000;
        }
        result.nogoodBld_ = nogoodBld_;
        if (((from_bitField0_ & 0x00008000) == 0x00008000)) {
          to_bitField0_ |= 0x00008000;
        }
        result.usesAssumptions_ = usesAssumptions_;
        if (((from_bitField0_ & 0x00010000) == 0x00010000)) {
          to_bitField0_ |= 0x00010000;
        }
        result.backjumpDistance_ = backjumpDistance_;
        if (((from_bitField0_ & 0x00020000) == 0x00020000)) {
          to_bitField0_ |= 0x00020000;
        }
        result.decisionLevel_ = decisionLevel_;
        result.bitField0_ = to_bitField0_;
        onBuilt();
        return result;
      }

      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof com.github.cpprofiler.Message.Node) {
          return mergeFrom((com.github.cpprofiler.Message.Node)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(com.github.cpprofiler.Message.Node other) {
        if (other == com.github.cpprofiler.Message.Node.getDefaultInstance()) return this;
        if (other.hasType()) {
          setType(other.getType());
        }
        if (other.hasSid()) {
          setSid(other.getSid());
        }
        if (other.hasPid()) {
          setPid(other.getPid());
        }
        if (other.hasAlt()) {
          setAlt(other.getAlt());
        }
        if (other.hasKids()) {
          setKids(other.getKids());
        }
        if (other.hasStatus()) {
          setStatus(other.getStatus());
        }
        if (other.hasRestartId()) {
          setRestartId(other.getRestartId());
        }
        if (other.hasTime()) {
          setTime(other.getTime());
        }
        if (other.hasThreadId()) {
          setThreadId(other.getThreadId());
        }
        if (other.hasLabel()) {
          bitField0_ |= 0x00000200;
          label_ = other.label_;
          onChanged();
        }
        if (other.hasDomainSize()) {
          setDomainSize(other.getDomainSize());
        }
        if (other.hasSolution()) {
          bitField0_ |= 0x00000800;
          solution_ = other.solution_;
          onChanged();
        }
        if (other.hasNogood()) {
          bitField0_ |= 0x00001000;
          nogood_ = other.nogood_;
          onChanged();
        }
        if (other.hasInfo()) {
          bitField0_ |= 0x00002000;
          info_ = other.info_;
          onChanged();
        }
        if (other.hasNogoodBld()) {
          setNogoodBld(other.getNogoodBld());
        }
        if (other.hasUsesAssumptions()) {
          setUsesAssumptions(other.getUsesAssumptions());
        }
        if (other.hasBackjumpDistance()) {
          setBackjumpDistance(other.getBackjumpDistance());
        }
        if (other.hasDecisionLevel()) {
          setDecisionLevel(other.getDecisionLevel());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        return this;
      }

      public final boolean isInitialized() {
        if (!hasType()) {
          
          return false;
        }
        return true;
      }

      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        com.github.cpprofiler.Message.Node parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (com.github.cpprofiler.Message.Node) e.getUnfinishedMessage();
          throw e;
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private com.github.cpprofiler.Message.Node.MsgType type_ = com.github.cpprofiler.Message.Node.MsgType.NODE;
      /**
       * <code>required .message.Node.MsgType type = 1;</code>
       */
      public boolean hasType() {
        return ((bitField0_ & 0x00000001) == 0x00000001);
      }
      /**
       * <code>required .message.Node.MsgType type = 1;</code>
       */
      public com.github.cpprofiler.Message.Node.MsgType getType() {
        return type_;
      }
      /**
       * <code>required .message.Node.MsgType type = 1;</code>
       */
      public Builder setType(com.github.cpprofiler.Message.Node.MsgType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000001;
        type_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>required .message.Node.MsgType type = 1;</code>
       */
      public Builder clearType() {
        bitField0_ = (bitField0_ & ~0x00000001);
        type_ = com.github.cpprofiler.Message.Node.MsgType.NODE;
        onChanged();
        return this;
      }

      private int sid_ ;
      /**
       * <code>optional int32 sid = 2;</code>
       */
      public boolean hasSid() {
        return ((bitField0_ & 0x00000002) == 0x00000002);
      }
      /**
       * <code>optional int32 sid = 2;</code>
       */
      public int getSid() {
        return sid_;
      }
      /**
       * <code>optional int32 sid = 2;</code>
       */
      public Builder setSid(int value) {
        bitField0_ |= 0x00000002;
        sid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 sid = 2;</code>
       */
      public Builder clearSid() {
        bitField0_ = (bitField0_ & ~0x00000002);
        sid_ = 0;
        onChanged();
        return this;
      }

      private int pid_ ;
      /**
       * <code>optional int32 pid = 3;</code>
       */
      public boolean hasPid() {
        return ((bitField0_ & 0x00000004) == 0x00000004);
      }
      /**
       * <code>optional int32 pid = 3;</code>
       */
      public int getPid() {
        return pid_;
      }
      /**
       * <code>optional int32 pid = 3;</code>
       */
      public Builder setPid(int value) {
        bitField0_ |= 0x00000004;
        pid_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 pid = 3;</code>
       */
      public Builder clearPid() {
        bitField0_ = (bitField0_ & ~0x00000004);
        pid_ = 0;
        onChanged();
        return this;
      }

      private int alt_ ;
      /**
       * <code>optional int32 alt = 4;</code>
       */
      public boolean hasAlt() {
        return ((bitField0_ & 0x00000008) == 0x00000008);
      }
      /**
       * <code>optional int32 alt = 4;</code>
       */
      public int getAlt() {
        return alt_;
      }
      /**
       * <code>optional int32 alt = 4;</code>
       */
      public Builder setAlt(int value) {
        bitField0_ |= 0x00000008;
        alt_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 alt = 4;</code>
       */
      public Builder clearAlt() {
        bitField0_ = (bitField0_ & ~0x00000008);
        alt_ = 0;
        onChanged();
        return this;
      }

      private int kids_ ;
      /**
       * <code>optional int32 kids = 5;</code>
       */
      public boolean hasKids() {
        return ((bitField0_ & 0x00000010) == 0x00000010);
      }
      /**
       * <code>optional int32 kids = 5;</code>
       */
      public int getKids() {
        return kids_;
      }
      /**
       * <code>optional int32 kids = 5;</code>
       */
      public Builder setKids(int value) {
        bitField0_ |= 0x00000010;
        kids_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 kids = 5;</code>
       */
      public Builder clearKids() {
        bitField0_ = (bitField0_ & ~0x00000010);
        kids_ = 0;
        onChanged();
        return this;
      }

      private com.github.cpprofiler.Message.Node.NodeStatus status_ = com.github.cpprofiler.Message.Node.NodeStatus.SOLVED;
      /**
       * <code>optional .message.Node.NodeStatus status = 6;</code>
       */
      public boolean hasStatus() {
        return ((bitField0_ & 0x00000020) == 0x00000020);
      }
      /**
       * <code>optional .message.Node.NodeStatus status = 6;</code>
       */
      public com.github.cpprofiler.Message.Node.NodeStatus getStatus() {
        return status_;
      }
      /**
       * <code>optional .message.Node.NodeStatus status = 6;</code>
       */
      public Builder setStatus(com.github.cpprofiler.Message.Node.NodeStatus value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000020;
        status_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional .message.Node.NodeStatus status = 6;</code>
       */
      public Builder clearStatus() {
        bitField0_ = (bitField0_ & ~0x00000020);
        status_ = com.github.cpprofiler.Message.Node.NodeStatus.SOLVED;
        onChanged();
        return this;
      }

      private int restartId_ ;
      /**
       * <code>optional int32 restart_id = 7;</code>
       */
      public boolean hasRestartId() {
        return ((bitField0_ & 0x00000040) == 0x00000040);
      }
      /**
       * <code>optional int32 restart_id = 7;</code>
       */
      public int getRestartId() {
        return restartId_;
      }
      /**
       * <code>optional int32 restart_id = 7;</code>
       */
      public Builder setRestartId(int value) {
        bitField0_ |= 0x00000040;
        restartId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 restart_id = 7;</code>
       */
      public Builder clearRestartId() {
        bitField0_ = (bitField0_ & ~0x00000040);
        restartId_ = 0;
        onChanged();
        return this;
      }

      private long time_ ;
      /**
       * <code>optional uint64 time = 8;</code>
       */
      public boolean hasTime() {
        return ((bitField0_ & 0x00000080) == 0x00000080);
      }
      /**
       * <code>optional uint64 time = 8;</code>
       */
      public long getTime() {
        return time_;
      }
      /**
       * <code>optional uint64 time = 8;</code>
       */
      public Builder setTime(long value) {
        bitField0_ |= 0x00000080;
        time_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional uint64 time = 8;</code>
       */
      public Builder clearTime() {
        bitField0_ = (bitField0_ & ~0x00000080);
        time_ = 0L;
        onChanged();
        return this;
      }

      private int threadId_ ;
      /**
       * <code>optional int32 thread_id = 9;</code>
       */
      public boolean hasThreadId() {
        return ((bitField0_ & 0x00000100) == 0x00000100);
      }
      /**
       * <code>optional int32 thread_id = 9;</code>
       */
      public int getThreadId() {
        return threadId_;
      }
      /**
       * <code>optional int32 thread_id = 9;</code>
       */
      public Builder setThreadId(int value) {
        bitField0_ |= 0x00000100;
        threadId_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 thread_id = 9;</code>
       */
      public Builder clearThreadId() {
        bitField0_ = (bitField0_ & ~0x00000100);
        threadId_ = 0;
        onChanged();
        return this;
      }

      private java.lang.Object label_ = "";
      /**
       * <code>optional string label = 10;</code>
       */
      public boolean hasLabel() {
        return ((bitField0_ & 0x00000200) == 0x00000200);
      }
      /**
       * <code>optional string label = 10;</code>
       */
      public java.lang.String getLabel() {
        java.lang.Object ref = label_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            label_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string label = 10;</code>
       */
      public com.google.protobuf.ByteString
          getLabelBytes() {
        java.lang.Object ref = label_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          label_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string label = 10;</code>
       */
      public Builder setLabel(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        label_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string label = 10;</code>
       */
      public Builder clearLabel() {
        bitField0_ = (bitField0_ & ~0x00000200);
        label_ = getDefaultInstance().getLabel();
        onChanged();
        return this;
      }
      /**
       * <code>optional string label = 10;</code>
       */
      public Builder setLabelBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000200;
        label_ = value;
        onChanged();
        return this;
      }

      private float domainSize_ ;
      /**
       * <code>optional float domain_size = 11;</code>
       */
      public boolean hasDomainSize() {
        return ((bitField0_ & 0x00000400) == 0x00000400);
      }
      /**
       * <code>optional float domain_size = 11;</code>
       */
      public float getDomainSize() {
        return domainSize_;
      }
      /**
       * <code>optional float domain_size = 11;</code>
       */
      public Builder setDomainSize(float value) {
        bitField0_ |= 0x00000400;
        domainSize_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional float domain_size = 11;</code>
       */
      public Builder clearDomainSize() {
        bitField0_ = (bitField0_ & ~0x00000400);
        domainSize_ = 0F;
        onChanged();
        return this;
      }

      private java.lang.Object solution_ = "";
      /**
       * <code>optional string solution = 12;</code>
       */
      public boolean hasSolution() {
        return ((bitField0_ & 0x00000800) == 0x00000800);
      }
      /**
       * <code>optional string solution = 12;</code>
       */
      public java.lang.String getSolution() {
        java.lang.Object ref = solution_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            solution_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string solution = 12;</code>
       */
      public com.google.protobuf.ByteString
          getSolutionBytes() {
        java.lang.Object ref = solution_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          solution_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string solution = 12;</code>
       */
      public Builder setSolution(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        solution_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string solution = 12;</code>
       */
      public Builder clearSolution() {
        bitField0_ = (bitField0_ & ~0x00000800);
        solution_ = getDefaultInstance().getSolution();
        onChanged();
        return this;
      }
      /**
       * <code>optional string solution = 12;</code>
       */
      public Builder setSolutionBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00000800;
        solution_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object nogood_ = "";
      /**
       * <code>optional string nogood = 13;</code>
       */
      public boolean hasNogood() {
        return ((bitField0_ & 0x00001000) == 0x00001000);
      }
      /**
       * <code>optional string nogood = 13;</code>
       */
      public java.lang.String getNogood() {
        java.lang.Object ref = nogood_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            nogood_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string nogood = 13;</code>
       */
      public com.google.protobuf.ByteString
          getNogoodBytes() {
        java.lang.Object ref = nogood_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          nogood_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string nogood = 13;</code>
       */
      public Builder setNogood(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        nogood_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string nogood = 13;</code>
       */
      public Builder clearNogood() {
        bitField0_ = (bitField0_ & ~0x00001000);
        nogood_ = getDefaultInstance().getNogood();
        onChanged();
        return this;
      }
      /**
       * <code>optional string nogood = 13;</code>
       */
      public Builder setNogoodBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00001000;
        nogood_ = value;
        onChanged();
        return this;
      }

      private java.lang.Object info_ = "";
      /**
       * <code>optional string info = 14;</code>
       */
      public boolean hasInfo() {
        return ((bitField0_ & 0x00002000) == 0x00002000);
      }
      /**
       * <code>optional string info = 14;</code>
       */
      public java.lang.String getInfo() {
        java.lang.Object ref = info_;
        if (!(ref instanceof java.lang.String)) {
          com.google.protobuf.ByteString bs =
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          if (bs.isValidUtf8()) {
            info_ = s;
          }
          return s;
        } else {
          return (java.lang.String) ref;
        }
      }
      /**
       * <code>optional string info = 14;</code>
       */
      public com.google.protobuf.ByteString
          getInfoBytes() {
        java.lang.Object ref = info_;
        if (ref instanceof String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          info_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }
      /**
       * <code>optional string info = 14;</code>
       */
      public Builder setInfo(
          java.lang.String value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        info_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional string info = 14;</code>
       */
      public Builder clearInfo() {
        bitField0_ = (bitField0_ & ~0x00002000);
        info_ = getDefaultInstance().getInfo();
        onChanged();
        return this;
      }
      /**
       * <code>optional string info = 14;</code>
       */
      public Builder setInfoBytes(
          com.google.protobuf.ByteString value) {
        if (value == null) {
    throw new NullPointerException();
  }
  bitField0_ |= 0x00002000;
        info_ = value;
        onChanged();
        return this;
      }

      private int nogoodBld_ ;
      /**
       * <code>optional int32 nogood_bld = 15;</code>
       */
      public boolean hasNogoodBld() {
        return ((bitField0_ & 0x00004000) == 0x00004000);
      }
      /**
       * <code>optional int32 nogood_bld = 15;</code>
       */
      public int getNogoodBld() {
        return nogoodBld_;
      }
      /**
       * <code>optional int32 nogood_bld = 15;</code>
       */
      public Builder setNogoodBld(int value) {
        bitField0_ |= 0x00004000;
        nogoodBld_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 nogood_bld = 15;</code>
       */
      public Builder clearNogoodBld() {
        bitField0_ = (bitField0_ & ~0x00004000);
        nogoodBld_ = 0;
        onChanged();
        return this;
      }

      private boolean usesAssumptions_ ;
      /**
       * <code>optional bool uses_assumptions = 16;</code>
       */
      public boolean hasUsesAssumptions() {
        return ((bitField0_ & 0x00008000) == 0x00008000);
      }
      /**
       * <code>optional bool uses_assumptions = 16;</code>
       */
      public boolean getUsesAssumptions() {
        return usesAssumptions_;
      }
      /**
       * <code>optional bool uses_assumptions = 16;</code>
       */
      public Builder setUsesAssumptions(boolean value) {
        bitField0_ |= 0x00008000;
        usesAssumptions_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional bool uses_assumptions = 16;</code>
       */
      public Builder clearUsesAssumptions() {
        bitField0_ = (bitField0_ & ~0x00008000);
        usesAssumptions_ = false;
        onChanged();
        return this;
      }

      private int backjumpDistance_ ;
      /**
       * <code>optional int32 backjump_distance = 17;</code>
       */
      public boolean hasBackjumpDistance() {
        return ((bitField0_ & 0x00010000) == 0x00010000);
      }
      /**
       * <code>optional int32 backjump_distance = 17;</code>
       */
      public int getBackjumpDistance() {
        return backjumpDistance_;
      }
      /**
       * <code>optional int32 backjump_distance = 17;</code>
       */
      public Builder setBackjumpDistance(int value) {
        bitField0_ |= 0x00010000;
        backjumpDistance_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 backjump_distance = 17;</code>
       */
      public Builder clearBackjumpDistance() {
        bitField0_ = (bitField0_ & ~0x00010000);
        backjumpDistance_ = 0;
        onChanged();
        return this;
      }

      private int decisionLevel_ ;
      /**
       * <code>optional int32 decision_level = 18;</code>
       */
      public boolean hasDecisionLevel() {
        return ((bitField0_ & 0x00020000) == 0x00020000);
      }
      /**
       * <code>optional int32 decision_level = 18;</code>
       */
      public int getDecisionLevel() {
        return decisionLevel_;
      }
      /**
       * <code>optional int32 decision_level = 18;</code>
       */
      public Builder setDecisionLevel(int value) {
        bitField0_ |= 0x00020000;
        decisionLevel_ = value;
        onChanged();
        return this;
      }
      /**
       * <code>optional int32 decision_level = 18;</code>
       */
      public Builder clearDecisionLevel() {
        bitField0_ = (bitField0_ & ~0x00020000);
        decisionLevel_ = 0;
        onChanged();
        return this;
      }

      // @@protoc_insertion_point(builder_scope:message.Node)
    }

    static {
      defaultInstance = new Node(true);
      defaultInstance.initFields();
    }

    // @@protoc_insertion_point(class_scope:message.Node)
  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_message_Node_descriptor;
  private static
    com.google.protobuf.GeneratedMessage.FieldAccessorTable
      internal_static_message_Node_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\rmessage.proto\022\007message\"\222\004\n\004Node\022#\n\004typ" +
      "e\030\001 \002(\0162\025.message.Node.MsgType\022\013\n\003sid\030\002 " +
      "\001(\005\022\013\n\003pid\030\003 \001(\005\022\013\n\003alt\030\004 \001(\005\022\014\n\004kids\030\005 " +
      "\001(\005\022(\n\006status\030\006 \001(\0162\030.message.Node.NodeS" +
      "tatus\022\022\n\nrestart_id\030\007 \001(\005\022\014\n\004time\030\010 \001(\004\022" +
      "\021\n\tthread_id\030\t \001(\005\022\r\n\005label\030\n \001(\t\022\023\n\013dom" +
      "ain_size\030\013 \001(\002\022\020\n\010solution\030\014 \001(\t\022\016\n\006nogo" +
      "od\030\r \001(\t\022\014\n\004info\030\016 \001(\t\022\022\n\nnogood_bld\030\017 \001" +
      "(\005\022\030\n\020uses_assumptions\030\020 \001(\010\022\031\n\021backjump" +
      "_distance\030\021 \001(\005\022\026\n\016decision_level\030\022 \001(\005\"",
      "(\n\007MsgType\022\010\n\004NODE\020\000\022\010\n\004DONE\020\001\022\t\n\005START\020" +
      "\002\"r\n\nNodeStatus\022\n\n\006SOLVED\020\000\022\n\n\006FAILED\020\001\022" +
      "\n\n\006BRANCH\020\002\022\020\n\014UNDETERMINED\020\003\022\010\n\004STOP\020\004\022" +
      "\n\n\006UNSTOP\020\005\022\013\n\007SKIPPED\020\006\022\013\n\007MERGING\020\007B\027\n" +
      "\025com.github.cpprofiler"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        }, assigner);
    internal_static_message_Node_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_message_Node_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessage.FieldAccessorTable(
        internal_static_message_Node_descriptor,
        new java.lang.String[] { "Type", "Sid", "Pid", "Alt", "Kids", "Status", "RestartId", "Time", "ThreadId", "Label", "DomainSize", "Solution", "Nogood", "Info", "NogoodBld", "UsesAssumptions", "BackjumpDistance", "DecisionLevel", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
